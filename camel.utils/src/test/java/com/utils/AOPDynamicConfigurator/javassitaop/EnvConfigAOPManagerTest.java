package com.utils.AOPDynamicConfigurator.javassitaop;

import static org.junit.Assert.*;

import java.util.Properties;

import org.junit.Test;
import org.springframework.beans.factory.config.PropertyPlaceholderConfigurer;

import sun.misc.VM;

import com.utils.AOPDynamicConfigurator.envparam.ConfigParamManager;
import com.utils.AOPDynamicConfigurator.javassistaop.EnvConfigAOPManager;
import com.utils.AOPDynamicConfigurator.javassistaop.Spring3PlaceHolderProcessor;


public class EnvConfigAOPManagerTest {

	@Test 
	public void initAOP_A$() throws Exception {
		ConfigParamManager cpm = new ConfigParamManager();
		cpm.readConfig();
		// TODO auto-generated by JUnit Helper.
		EnvConfigAOPManager.initAOP();
		Class c = EnvConfigAOPManager.class.getClassLoader().loadClass("org.springframework.beans.factory.config.PropertyPlaceholderConfigurer");
		
		subPPC ppc = new subPPC();
		Properties props = new Properties();
		props.setProperty("abc", "{abc.placeholder}");
		String rs = ppc.aaa("abc", props,1);
		System.out.println("new instance");
		//ppc.resolvePlaceholder("{abc}",null);
		//assertEquals(c.);
		ClassLoader cl = Spring3PlaceHolderProcessor.class.getClassLoader();
		assertEquals("","");
	}
	
	private class subPPC extends PropertyPlaceholderConfigurer{
		public String aaa (String placeholder, Properties props, int systemPropertiesMode){
			return super.resolvePlaceholder(placeholder,props,systemPropertiesMode);			
		}
	}

}
